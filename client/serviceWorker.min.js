const cachePrefix="resto-revs",cacheVersion="v0001",cacheName="resto-revs-v0001";self.addEventListener("install",e=>{e.waitUntil(caches.open(cacheName).then(function(e){let s=["index.html","restaurant.html","unavailable.html","data/restaurants.json","img/restaurant-128.png","img/restaurant-256.png","img/restaurant.png","css/styles.css","css/styles.min.css","js/urlhelper.js","js/urlhelper.min.js","js/dbhelper.js","js/dbhelper.min.js","js/main.js","js/main.min.js","js/restaurant_info.js","js/restaurant_info.min.js"];const t=["","-200","-300","-400","-500","-600"];for(let e=1;e<=10;e++)t.forEach(t=>s.push(`img/${e}${t}.jpg`));return e.addAll(s).then(()=>self.skipWaiting())}).catch(e=>console.error(e)))}),self.addEventListener("activate",e=>{}),self.addEventListener("fetch",e=>{const s=new Promise((s,t)=>{caches.open(cacheName).then(n=>{let a=e.request.url;n.match(a).then(r=>{if(r)return s(r);fetch(e.request).then(e=>(n.put(a,e.clone()),s(e))).catch(a=>{if(!e.request.url.includes("restaurant.html?id="))return t(a);n.match("unavailable.html").then(e=>s(e))})})})});e.respondWith(s)});